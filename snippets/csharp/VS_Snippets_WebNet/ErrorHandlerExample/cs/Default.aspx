<!-- <Snippet1> -->
<%@ Page Language="C#" %>

<script runat="server">
  protected void Submit_Click(object sender, EventArgs e)
  {
    string arg = ((Button)sender).CommandArgument;

    switch (arg)
    {
      case "1":
        {
          // Exception handled on the Generic Error Page
          throw new InvalidOperationException("Button 1 was clicked");
          break;
        }
      case "2":
        {
          // Exception handled on the current page
          throw new ArgumentOutOfRangeException("Button 2 was clicked");
          break;
        }
      case "3":
        {
          // Exception handled by Application_Error
          throw new Exception("Button 3 was clicked");
          break;
        }
      case "4":
        {
          // Exception handled on the Http 404 Error Page
          Response.Redirect("NonexistentPage.aspx");
          break;
        }
      case "5":
        {
          // Exception handled on the Http Error Page
          Response.Redirect("NonexistentPage-NoCatch.aspx");
          break;
        }
      case "6":
        {
          // Exception handled on the Generic Http Error Page
            Response.Redirect("NonexistentPage-NoCatch.aspx/" + new string('x', 500));
          break;
        }
    }
  }
  // <Snippet3>
  private void Page_Error(object sender, EventArgs e)
  {
    // Get last error from the server
    Exception exc = Server.GetLastError();

    // Handle exceptions generated by Button 1
    if (exc is InvalidOperationException)
    {
      // Pass the error on to the Generic Error page
      Server.Transfer("GenericErrorPage.aspx", true);
    }

    // Handle exceptions generated by Button 2
    else if (exc is ArgumentOutOfRangeException)
    {
      // Give the user some information, but
      // stay on the default page
      Response.Write("<h2>Default Page Error</h2>\n");
      Response.Write("<p>Provide as much information here as is " +
        "appropriate to show to the client.</p>\n");
      Response.Write("Return to the <a href='Default.aspx'>" +
          "Default Page</a>\n");

      // Log the exception and notify system operators
      ExceptionUtility.LogException(exc, "DefaultPage");
      ExceptionUtility.NotifySystemOps(exc);

      // Clear the error from the server
      Server.ClearError();
    }
    else
    {
      // Pass the error on to the default global handler
    }
  }
  // </Snippet3>
</script>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head id="Head1" runat="server">
  <title>Exception Handler Page</title>
</head>
<body>
  <form id="form1" runat="server">
  <div>
    <h2>
      Default Page</h2>
    <p>
      Click this button to create an InvalidOperationException.<br />
      Page_Error will catch this and redirect to 
      GenericErrorPage.aspx.<br />
      <asp:Button ID="Submit1" runat="server" 
        CommandArgument="1" OnClick="Submit_Click"
        Text="Button 1" />
    </p>
    <p>
      Click this button to create an ArgumentOutOfRangeException.<br />
      Page_Error will catch this and handle the error.<br />
      <asp:Button ID="Submit2" runat="server" 
        CommandArgument="2" OnClick="Submit_Click"
        Text="Button 2" />
    </p>
    <p>
      Click this button to create a generic Exception.<br />
      Application_Error will catch this and handle the error.<br />
      <asp:Button ID="Submit3" runat="server" 
        CommandArgument="3" OnClick="Submit_Click"
        Text="Button 3" />
    </p>
    <p>
      Click this button to create an HTTP 404 (not found) error.<br />
      Application_Error will catch this 
      and redirect to HttpErrorPage.aspx.<br />
      <asp:Button ID="Submit4" runat="server" 
      CommandArgument="4" OnClick="Submit_Click"
        Text="Button 4" />
    </p>
    <p>
      Click this button to create an HTTP 404 (not found) error.<br />
      Application_Error will catch this 
      but will not take any action on it, and ASP.NET
      will redirect to Http404ErrorPage.aspx. 
      The original exception object will not be
      available.<br />
      <asp:Button ID="Submit5" runat="server" 
        CommandArgument="5" OnClick="Submit_Click"
        Text="Button 5" />
    </p>
    <p>
      Click this button to create an HTTP 400 (invalid url) error.<br />
      Application_Error will catch this 
      but will not take any action on it, and ASP.NET
      will redirect to DefaultRedirectErrorPage.aspx. 
      The original exception object will not
      be available.<br />
      <asp:Button ID="Button1" runat="server" 
        CommandArgument="6" OnClick="Submit_Click"
        Text="Button 6" />
    </p>
  </div>
  </form>
</body>
</html>
<!-- </Snippet1> -->
